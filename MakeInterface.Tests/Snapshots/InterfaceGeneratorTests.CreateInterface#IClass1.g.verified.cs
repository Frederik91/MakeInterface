//HintName: IClass1.g.cs
#nullable enable
using MakeInterface.Tests.Models;
using MakeInterface;
using System.Collections.Generic;

// <auto-generated/>
#pragma warning disable
#nullable enable
using MakeInterface.Tests.Models;
using MakeInterface;
using System.Collections.Generic;

namespace MakeInterface.Tests
{
    public partial interface IClass1
    {
        void Method1();
        TestModel Test();
        void Test2<T>(T data);
        void Test3<T>(T data)
            where T : TestModel;
        string? Property1 { get; set; }

        List<ITestModel?>? TestCollection();
        void OutMethod(out string data);
        void RefMethod(ref string data);
        void DefaultNullMethod(string? data = default);
        void DefaultMethod(int data = default);
        string AbstractProperty { get; set; }

        void AbstractMethod { get; set; }

        string VirtualProperty { get; set; }

        void VirtualMethod();
        Task AsyncMethod();
        string PropertyWithDefault { get; }

        string PropertyWithDefault2 { get; }
    }
}

namespace MakeInterface.Tests.Models
{
    public partial interface ITestModel
    {
    }
}